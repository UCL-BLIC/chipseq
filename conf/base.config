/*
 * -------------------------------------------------
 *  Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

// Defaults config params, may be overwritten by later configs
params {
  max_memory = 128.GB
  max_cpus = 16
  max_time = 240.h
  igenomes_base = 's3://ngi-igenomes/igenomes/'
}


process {

  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }
  container = params.container

  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

  // Environment modules and resource requirements
  $fastqc {
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $trim_galore {
    cpus = { check_max( 2 * task.attempt, 'cpus' ) }
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  $bwa{
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
    memory = { check_max( 64.GB * task.attempt, 'memory' ) }
    time = { check_max( 24.h * task.attempt, 'time' ) }
  }
  $samtools {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  $bwa_mapped{
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $picard {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  $countstat {
    time = { check_max( 8.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $phantompeakqualtools {
    time = { check_max( 8.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $calculateNSCRSC {
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $deepTools {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $ngsplot {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $macs {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  $saturation {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  $saturation_r {
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $chippeakanno {
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $get_software_versions {
    memory = { check_max( 2.GB * task.attempt, 'memory' ) }
    executor = 'local'
    errorStrategy = 'ignore'
  }
  $multiqc {
    memory = { check_max( 2.GB * task.attempt, 'memory' ) }
    executor = 'local'
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
}

